<?xml version="1.0" encoding="UTF-8"?>
<implementation>
    <functions>
        -- -------------------------------------------------------------------------------------------------------------------------
        -- Deus Ex Machina (II)
        -- https://github.com/toggledbits/DeusExMachina
        -- Original code and releases 1.x by Andy Lintner (beowulfe) Version 2.0 and beyond by Patrick Rigney (rigpapa/toggledbits).
        -- A big thanks to Andy for passing the torch so that this great plug-in can live on.
        -- -------------------------------------------------------------------------------------------------------------------------
        function startupDeusExMachinaII1(deusDevice)
            luup.log("DeusExMachinaII STARTUP!")
            demII = require("L_DeusExMachinaII1")
            deusStep = demII.deusStep
            demII.deusInit(deusDevice)
        end
    </functions>
    <startup>startupDeusExMachinaII1</startup>
    <actionList>
        <action>
            <serviceId>urn:upnp-org:serviceId:SwitchPower1</serviceId>
            <name>SetTarget</name>
            <run>
                local newTargetValue = lul_settings.newTargetValue or "0"
                if (newTargetValue == "1") then
                    demII.deusEnable(lul_device)
                else
                    demII.deusDisable(lul_device)
                end
            </run>
        </action>
        <action>
            <serviceId>urn:upnp-org:serviceId:SwitchPower1</serviceId>
            <name>GetTarget</name>
            <run>
                -- nothing required
            </run>
        </action>
        <action>
            <serviceId>urn:upnp-org:serviceId:SwitchPower1</serviceId>
            <name>GetStatus</name>
            <run>
                -- nothing required
            </run>
        </action>
        <action>
            <serviceId>urn:toggledbits-com:serviceId:DeusExMachinaII1</serviceId>
            <name>SetEnabled</name>
            <run>
                local newEnabledValue = lul_settings.NewEnabledValue or "0"
                luup.variable_set("urn:upnp-org:serviceId:SwitchPower1", "Target", newEnabledValue, lul_device)
                if (newEnabledValue == "1") then
                    demII.deusEnable(lul_device)
                else
                    demII.deusDisable(lul_device)
                end
            </run>
        </action>
        <action>
            <serviceId>urn:toggledbits-com:serviceId:DeusExMachinaII1</serviceId>
            <name>GetPluginVersion</name>
            <run>
                -- Ugly hack. Luup seems to only be able to return values from related state variables (see S_), so use a temp
                -- one to store the result we want to pass back. Blech. C'mon guys. Amateur hour. Add an extra return argument
                -- for a table of return values or something, please?
                local vs, vn = demII.getVersion()
                luup.variable_set("urn:toggledbits-com:serviceId:DeusExMachinaII1", "TempStorage", vs, lul_device)
                return true
            </run>
        </action>
    </actionList>
</implementation>
